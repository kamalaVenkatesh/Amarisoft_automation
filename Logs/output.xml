<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190225 17:37:59.460" generator="Robot 3.1.1 (Python 2.7.14 on linux2)">
<suite source="/home/edureka/kamala/Amarisoft_automation/TestCases/Prereq.robot" id="s1" name="Prereq">
<test id="s1-t1" name="Execute Scenarios">
<kw name="Open Connection And Log In" library="Keywords">
<arguments>
<arg>${UE}</arg>
<arg>${UE_USER}</arg>
<arg>${UE_PASS}</arg>
</arguments>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${arg1}</arg>
</arguments>
<status status="PASS" endtime="20190225 17:37:59.623" starttime="20190225 17:37:59.623"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${arg2}</arg>
<arg>${arg3}</arg>
</arguments>
<msg timestamp="20190225 17:37:59.625" level="INFO">Logging into '172.27.22.201:22' as 'root'.</msg>
<msg timestamp="20190225 17:38:00.937" level="INFO">Read output: Last login: Mon Feb 25 13:12:53 2019 from 172.24.41.87
[root@localhost ~]#</msg>
<msg timestamp="20190225 17:38:00.938" level="INFO">/home/edureka/.local/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  m.add_string(self.Q_C.public_numbers().encode_point())
/home/edureka/.local/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:96: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point
  self.curve, Q_S_bytes
/home/edureka/.local/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:111: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  hm.add_string(self.Q_C.public_numbers().encode_point())</msg>
<status status="PASS" endtime="20190225 17:38:00.939" starttime="20190225 17:37:59.624"></status>
</kw>
<status status="PASS" endtime="20190225 17:38:00.940" starttime="20190225 17:37:59.621"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>service lte stop</arg>
</arguments>
<msg timestamp="20190225 17:38:00.943" level="INFO">Executing command 'service lte stop'.</msg>
<msg timestamp="20190225 17:38:00.988" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20190225 17:38:00.988" starttime="20190225 17:38:00.941"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>./trx_sdr/sdr_util upgrade</arg>
</arguments>
<msg timestamp="20190225 17:38:00.990" level="INFO">Executing command './trx_sdr/sdr_util upgrade'.</msg>
<msg timestamp="20190225 17:38:01.069" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20190225 17:38:01.069" starttime="20190225 17:38:00.989"></status>
</kw>
<kw name="Put File" library="SSHLibrary">
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<arguments>
<arg>../Config/ue_64.cfg</arg>
<arg>/root/ue/config/ue_new_64.cfg</arg>
</arguments>
<msg timestamp="20190225 17:38:01.157" level="INFO">[chan 3] Opened sftp connection (server version 3)</msg>
<msg timestamp="20190225 17:38:01.183" level="INFO">[chan 4] Opened sftp connection (server version 3)</msg>
<msg timestamp="20190225 17:38:01.292" level="INFO">'../Config/ue_64.cfg' -&gt; '/root/ue/config/ue_new_64.cfg'</msg>
<status status="PASS" endtime="20190225 17:38:01.293" starttime="20190225 17:38:01.070"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>/root/ue/lteue /root/ue/config/ue_new_64.cfg</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190225 17:38:01.294" level="INFO">Executing command '/root/ue/lteue /root/ue/config/ue_new_64.cfg'.</msg>
<msg timestamp="20190225 17:38:02.542" level="INFO">Command exited with return code 1.</msg>
<msg timestamp="20190225 17:38:02.543" level="INFO">${value} = LTE UE version 2018-10-18, Copyright (C) 2012-2018 Amarisoft</msg>
<status status="PASS" endtime="20190225 17:38:02.543" starttime="20190225 17:38:01.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190225 17:38:02.546" level="INFO">LTE UE version 2018-10-18, Copyright (C) 2012-2018 Amarisoft</msg>
<status status="PASS" endtime="20190225 17:38:02.547" starttime="20190225 17:38:02.545"></status>
</kw>
<status status="PASS" endtime="20190225 17:38:02.549" critical="yes" starttime="20190225 17:37:59.620"></status>
</test>
<doc>Check EPC Node reachability</doc>
<status status="PASS" endtime="20190225 17:38:02.552" starttime="20190225 17:37:59.462"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Prereq" pass="1">Prereq</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190225 17:37:59.590" level="ERROR">Error in file '/home/edureka/kamala/Amarisoft_automation/TestCases/Prereq.robot': Importing test library 'Operatingsystem' failed: ImportError: No module named Operatingsystem
Traceback (most recent call last):
  None
PYTHONPATH:
  /usr/local/bin
  /usr/lib/python2.7
  /usr/lib/python2.7/plat-x86_64-linux-gnu
  /usr/lib/python2.7/lib-tk
  /usr/lib/python2.7/lib-old
  /usr/lib/python2.7/lib-dynload
  /home/edureka/.local/lib/python2.7/site-packages
  /usr/local/lib/python2.7/dist-packages
  /usr/lib/python2.7/dist-packages
  /usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode</msg>
</errors>
</robot>
